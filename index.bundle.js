!function(n){var e={};function t(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return n[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)t.d(r,i,function(e){return n[e]}.bind(null,i));return r},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=334)}({334:function(n,e,t){"use strict";t(335),window.onload=function(){}},335:function(n,e,t){var r=t(336);"string"==typeof r&&(r=[[n.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};t(349)(r,i);r.locals&&(n.exports=r.locals)},336:function(n,e,t){e=n.exports=t(337)(!1);var r=t(338),i=r(t(339)),o=r(t(340)),a=r(t(341)),s=r(t(342)),c=r(t(343)),l=r(t(344)),p=r(t(345)),f=r(t(346)),u=r(t(347)),d=r(t(348));e.push([n.i,"@font-face {\n  font-family: 'MyriadPro';\n  font-weight: normal;\n  font-style: normal;\n  src: url("+i+") format('truetype');\n}\n@font-face {\n  font-family: 'MyriadPro';\n  font-weight: bold;\n  font-style: normal;\n  src: url("+o+") format('truetype');\n}\n@font-face {\n  font-family: 'MyriadPro-LightSemiExt';\n  font-weight: normal;\n  font-style: normal;\n  src: url("+a+") format('truetype');\n}\n.bullet-bar {\n  margin-bottom: 18px;\n  display: block;\n}\n.bullet-bar__title {\n  margin: 0 0 7px;\n  font-size: 26px;\n  font-weight: 400;\n  text-align: center;\n  text-transform: uppercase;\n}\n.bullet-bar__bullets {\n  margin: auto;\n  height: 20px;\n}\n.bullet-bar__bullet {\n  margin: 0 3px;\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  background: #e6e6e6;\n  border-radius: 50%;\n}\n.bullet-bar__bullet_progress {\n  background: #3d6cb0;\n}\n@media screen and (max-width: 960px) {\n  .bullet-bar__bullet {\n    width: 14px;\n    height: 14px;\n  }\n}\n.contact {\n  margin-top: 30px;\n  display: block;\n}\n.contact__table {\n  margin: 15px 0 0;\n}\n.contact__string {\n  margin: 0;\n  height: 52px;\n}\n.contact__key {\n  width: 125px;\n  font-size: 21px;\n  color: #3d6cb0;\n  letter-spacing: -0.01em;\n  font-weight: 700;\n  text-transform: uppercase;\n}\n.contact__value {\n  font-size: 21px;\n  color: #000;\n  letter-spacing: -0.01em;\n  font-weight: 400;\n}\n@media screen and (max-width: 768px) {\n  .contact__table {\n    margin: 5px auto;\n  }\n}\n.content {\n  margin: 76px 0;\n  padding: 5px;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n}\n.content__left {\n  margin-right: 72px;\n  width: 414px;\n  min-width: 300px;\n}\n.content__right {\n  width: 632px;\n  min-width: 300px;\n}\n@media screen and (max-width: 768px) {\n  .content {\n    -ms-flex-wrap: wrap;\n        flex-wrap: wrap;\n    margin: 25px 0;\n  }\n  .content__left,\n  .content__right {\n    margin: 0;\n    width: 100%;\n  }\n}\n.edu-work-item {\n  display: block;\n}\n.edu-work-item__degree {\n  margin-right: 8px;\n  display: inline-block;\n  font-size: 26px;\n  color: #3d6cb0;\n  font-weight: 700;\n  text-transform: uppercase;\n}\n.edu-work-item__degree_work {\n  color: #000;\n}\n.edu-work-item__period {\n  display: inline-block;\n  font-size: 26px;\n  color: #020202;\n  font-weight: 400;\n}\n.edu-work-item__institution-name {\n  font-size: 26px;\n  color: #000;\n  font-weight: 400;\n  text-transform: uppercase;\n}\n.edu-work-item__text {\n  margin: 7px 0 12px;\n  font-size: 15px;\n  color: #000;\n  letter-spacing: 0.014em;\n  font-weight: 400;\n}\n.education {\n  display: block;\n}\n.education__list {\n  margin: 23px 0 0 14px;\n}\n.education__list-item {\n  list-style-image: url("+s+");\n}\n.experience {\n  margin-top: 49px;\n  display: block;\n}\n.experience__list {\n  margin: 37px 0 0 14px;\n}\n.experience__list-item {\n  list-style-image: url("+s+");\n}\n.line-bar {\n  margin-bottom: 28px;\n  display: block;\n}\n.line-bar__title {\n  margin: 0 0 17px;\n  font-size: 26px;\n  color: #000;\n  letter-spacing: 0.001em;\n  line-height: 20px;\n  font-weight: 400;\n  text-transform: uppercase;\n}\n.line-bar__body {\n  height: 22px;\n  background-color: #e6e6e6;\n}\n.line-bar__bar {\n  height: 22px;\n  background-color: #3d6cb0;\n}\n@media screen and (max-width: 768px) {\n  .line-bar__title {\n    text-align: center;\n  }\n}\n.person {\n  margin: 14px auto;\n  display: block;\n  width: 300px;\n}\n.person__contur {\n  margin: 0 auto 27px;\n  width: 230px;\n  height: 230px;\n  border: 1px solid #3d6cb0;\n  border-radius: 50%;\n}\n.person__photo {\n  margin: 14px;\n  width: 202px;\n  height: 202px;\n  background-color: #3d6cb0;\n  border-radius: 50%;\n}\n.person__name {\n  margin: 0;\n  font-size: 52px;\n  color: #000;\n  letter-spacing: 0.017em;\n  font-weight: 400;\n  font-family: 'MyriadPro-LightSemiExt', sans-serif;\n  text-align: center;\n  text-transform: uppercase;\n}\n.person__surname {\n  margin: 0;\n  font-size: 62px;\n  color: #000;\n  line-height: 42px;\n  font-weight: 700;\n  text-align: center;\n  text-transform: uppercase;\n}\n.person__career {\n  margin: 0;\n  font-size: 25px;\n  color: #000;\n  letter-spacing: -0.02em;\n  line-height: 62px;\n  font-weight: 700;\n  text-align: center;\n  text-transform: uppercase;\n}\n.profile {\n  margin: 58px 0 0;\n  display: block;\n}\n.profile__text {\n  margin-top: 9px;\n}\n.profile__text_span {\n  font-weight: 700;\n}\n.section-header {\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n}\n.section-header__icon {\n  margin-right: 10px;\n  width: 78px;\n  min-width: 78px;\n  height: 78px;\n}\n.section-header__icon_profile {\n  background: url("+c+") no-repeat;\n  background-size: contain;\n}\n.section-header__icon_contact {\n  background: url("+l+") no-repeat;\n  background-size: contain;\n}\n.section-header__icon_education {\n  background: url("+p+") no-repeat;\n  background-size: contain;\n}\n.section-header__icon_experience {\n  background: url("+f+") no-repeat;\n  background-size: contain;\n}\n.section-header__icon_skills {\n  background: url("+u+") no-repeat;\n  background-size: contain;\n}\n.section-header__icon_software {\n  background: url("+d+") no-repeat;\n  background-size: contain;\n}\n.section-header__title {\n  margin: 0 10px 0 0;\n  height: 29px;\n  font-size: 41px;\n  color: #3d6cb0;\n  line-height: 31px;\n  font-weight: 700;\n  text-transform: uppercase;\n}\n.section-header__line {\n  width: 500px;\n  min-width: 0;\n  height: 6px;\n  background-color: #3d6cb0;\n}\n@media screen and (max-width: 768px) {\n  .section-header {\n    -webkit-box-orient: vertical;\n    -webkit-box-direction: normal;\n        -ms-flex-direction: column;\n            flex-direction: column;\n  }\n  .section-header__icon {\n    margin: 0;\n  }\n  .section-header__title {\n    margin: 20px 0;\n  }\n  .section-header__line {\n    display: none;\n  }\n}\n.skills {\n  margin-top: 27px;\n  display: block;\n  text-align: center;\n}\n.skills__list {\n  margin: 19px 0 0;\n  padding: 0;\n  list-style-type: none;\n}\n.skills__list-item {\n  margin: 0 5px;\n  display: inline-block;\n}\n.software {\n  margin-top: 50px;\n  display: block;\n}\n.software__list {\n  margin: 26px 0 0;\n  padding: 0;\n  list-style-type: none;\n}\n.software__list-item {\n  margin: 0 59px 0 8px;\n  display: inline-block;\n  width: 276px;\n}\n.software__list-item_even {\n  margin-right: 0;\n}\n@media screen and (max-width: 1145px) {\n  .software__list {\n    margin: 30px auto;\n  }\n  .software__list-item {\n    margin: 0 8px;\n    width: 98%;\n  }\n}\nbody {\n  margin: 0;\n  padding: 0;\n  font-size: 15px;\n  color: #000;\n  letter-spacing: 0.025em;\n  font-weight: 400;\n  font-family: 'MyriadPro', sans-serif;\n}\n",""])},337:function(n,e,t){"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var t=function(n,e){var t=n[1]||"",r=n[3];if(!r)return t;if(e&&"function"==typeof btoa){var i=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),o=r.sources.map(function(n){return"/*# sourceURL="+r.sourceRoot+n+" */"});return[t].concat(o).concat([i]).join("\n")}var a;return[t].join("\n")}(e,n);return e[2]?"@media "+e[2]+"{"+t+"}":t}).join("")},e.i=function(n,t){"string"==typeof n&&(n=[[null,n,""]]);for(var r={},i=0;i<this.length;i++){var o=this[i][0];null!=o&&(r[o]=!0)}for(i=0;i<n.length;i++){var a=n[i];null!=a[0]&&r[a[0]]||(t&&!a[2]?a[2]=t:t&&(a[2]="("+a[2]+") and ("+t+")"),e.push(a))}},e}},338:function(n,e,t){"use strict";n.exports=function(n,e){return"string"!=typeof n?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),/["'() \t\n]/.test(n)||e?'"'+n.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':n)}},339:function(n,e){n.exports="assets/fonts/MyriadPro-Regular.ttf"},340:function(n,e){n.exports="assets/fonts/MyriadPro-Bold.ttf"},341:function(n,e){n.exports="assets/fonts/MyriadPro-LightSemiExt.ttf"},342:function(n,e){n.exports="assets/images/bullet.png"},343:function(n,e){n.exports="assets/images/profile.png"},344:function(n,e){n.exports="assets/images/contact.png"},345:function(n,e){n.exports="assets/images/education.png"},346:function(n,e){n.exports="assets/images/experience.png"},347:function(n,e){n.exports="assets/images/skills.png"},348:function(n,e){n.exports="assets/images/software.png"},349:function(n,e,t){var r,i,o={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===i&&(i=r.apply(this,arguments)),i}),s=function(n){var e={};return function(n,t){if("function"==typeof n)return n();if(void 0===e[n]){var r=function(n,e){return e?e.querySelector(n):document.querySelector(n)}.call(this,n,t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}}(),c=null,l=0,p=[],f=t(350);function u(n,e){for(var t=0;t<n.length;t++){var r=n[t],i=o[r.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](r.parts[a]);for(;a<r.parts.length;a++)i.parts.push(b(r.parts[a],e))}else{var s=[];for(a=0;a<r.parts.length;a++)s.push(b(r.parts[a],e));o[r.id]={id:r.id,refs:1,parts:s}}}}function d(n,e){for(var t=[],r={},i=0;i<n.length;i++){var o=n[i],a=e.base?o[0]+e.base:o[0],s={css:o[1],media:o[2],sourceMap:o[3]};r[a]?r[a].parts.push(s):t.push(r[a]={id:a,parts:[s]})}return t}function g(n,e){var t=s(n.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=p[p.length-1];if("top"===n.insertAt)r?r.nextSibling?t.insertBefore(e,r.nextSibling):t.appendChild(e):t.insertBefore(e,t.firstChild),p.push(e);else if("bottom"===n.insertAt)t.appendChild(e);else{if("object"!=typeof n.insertAt||!n.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var i=s(n.insertAt.before,t);t.insertBefore(e,i)}}function m(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var e=p.indexOf(n);e>=0&&p.splice(e,1)}function x(n){var e=document.createElement("style");if(void 0===n.attrs.type&&(n.attrs.type="text/css"),void 0===n.attrs.nonce){var r=function(){0;return t.nc}();r&&(n.attrs.nonce=r)}return h(e,n.attrs),g(n,e),e}function h(n,e){Object.keys(e).forEach(function(t){n.setAttribute(t,e[t])})}function b(n,e){var t,r,i,o;if(e.transform&&n.css){if(!(o="function"==typeof e.transform?e.transform(n.css):e.transform.default(n.css)))return function(){};n.css=o}if(e.singleton){var a=l++;t=c||(c=x(e)),r=w.bind(null,t,a,!1),i=w.bind(null,t,a,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(n){var e=document.createElement("link");return void 0===n.attrs.type&&(n.attrs.type="text/css"),n.attrs.rel="stylesheet",h(e,n.attrs),g(n,e),e}(e),r=function(n,e,t){var r=t.css,i=t.sourceMap,o=void 0===e.convertToAbsoluteUrls&&i;(e.convertToAbsoluteUrls||o)&&(r=f(r));i&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");var a=new Blob([r],{type:"text/css"}),s=n.href;n.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}.bind(null,t,e),i=function(){m(t),t.href&&URL.revokeObjectURL(t.href)}):(t=x(e),r=function(n,e){var t=e.css,r=e.media;r&&n.setAttribute("media",r);if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}.bind(null,t),i=function(){m(t)});return r(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r(n=e)}else i()}}n.exports=function(n,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=a()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var t=d(n,e);return u(t,e),function(n){for(var r=[],i=0;i<t.length;i++){var a=t[i];(s=o[a.id]).refs--,r.push(s)}n&&u(d(n,e),e);for(i=0;i<r.length;i++){var s;if(0===(s=r[i]).refs){for(var c=0;c<s.parts.length;c++)s.parts[c]();delete o[s.id]}}}};var _,y=(_=[],function(n,e){return _[n]=e,_.filter(Boolean).join("\n")});function w(n,e,t,r){var i=t?"":r.css;if(n.styleSheet)n.styleSheet.cssText=y(e,i);else{var o=document.createTextNode(i),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(o,a[e]):n.appendChild(o)}}},350:function(n,e){n.exports=function(n){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var t=e.protocol+"//"+e.host,r=t+e.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(n,e){var i,o=e.trim().replace(/^"(.*)"$/,function(n,e){return e}).replace(/^'(.*)'$/,function(n,e){return e});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?n:(i=0===o.indexOf("//")?o:0===o.indexOf("/")?t+o:r+o.replace(/^\.\//,""),"url("+JSON.stringify(i)+")")})}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,